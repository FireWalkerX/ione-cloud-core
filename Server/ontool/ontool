#!/bin/bash

case "$1" in
    "delete"            )
        echo "Deleting User $2, are you sure?[Y/n]"
        read choice
        if ["$choice" -eq "Y" | ""]
        then
            ruby /usr/lib/ontools/delete.rb $2
        fi
        ;;
    "hello"             )
        echo "Printing Hello, World! to Server-log"
        ruby /usr/lib/ontools/hello.rb
        ;;
    "-a" | "address"    )
        echo "Getting IP-address of VM number $2"
        ruby /usr/lib/ontools/ip.rb $2
        ;;
    "-l" | "log"        )
        ruby /usr/lib/ontools/log.rb
        ;;
    "-r" | "resume"     )
        echo "Resuming VM$2, are you sure?[Y/n]"
        read choice
        if ["$choice" -eq "Y" | ""]
        then
            ruby /usr/lib/ontools/resume.rb $2
        fi
        ;;
    "reboot"            )
        echo "Rebooting VM$2, are you sure?[Y/n]"
        read choice
        if ["$choice" -eq "Y" | ""]
        then
            ruby /usr/lib/ontools/reboot.rb $2
        fi
        ;;
    "-sh" | "shutdown" | "poweroff" )
        echo "Shutting down VM$2, are you sure?[Y/n]"
        read choice
        if ["$choice" -eq "Y" | ""]
        then
            ruby /usr/lib/ontools/shutdown.rb $2
        fi
        ;;
    "suspend"           )
        echo "Suspending User$2 and VM$3, are you sure?[Y/n]"
        read choice
        if ["$choice" -eq "Y" | ""]
        then
            ruby /usr/lib/ontools/suspend.rb $2 $3
        fi
        ;;
    "unsuspend"         )
        echo "Unsuspending User$2 and VM$3, are you sure?[Y/n]"
        read choice
        if ["$choice" -eq "Y" | ""]
        then
            ruby /usr/lib/ontools/unsuspend.rb $2 $3
        fi
        ;;
    "terminate"         )
        echo "Terminating User$2 and VM$3, are you sure?[Y/n]"
        read choice
        if ["$choice" -eq "Y" | ""]
        then
            ruby /usr/lib/ontools/unsuspend.rb $2 $3
        fi
        ;;
    "stop"              )
        echo "Stopping JSON-RPC server, are you sure?[Y/n]"
        if ["$choice" -ne "Y" | ""]
        then
            echo "Cancelling"
        else
            echo "Enter password: "
            read password
            ruby /usr/lib/ontools/stop.rb $password
        fi
        ;;
    "info" | "-i"       )
        ruby /usr/lib/ontools/vmxml.rb $2
        ;;
    *                   )
        echo "You may use this keys:"
        echo -e " \t-h, hello\t -- printing 'Hello, World!' to server logs"
        echo -e " \t-a, address\t -- printing VM with the VMID from second param IP-addres"
        echo -e " \t-l, log\t\t -- printing all content from log file at the server"
        echo -e " \t-r, resume\t -- resuming VM from SHUT, POWEROFF, STOPPED and UNDEPLOYED states, requires VMID as the second param"
        echo -e " \treboot\t\t -- rebooting VM, requires rebooting VM VMID as the second param"
        echo -e " \tstop\t\t -- stopping server"
        echo -e " \tterminate\t -- deletes user(first param) and it's VM(second param)"
        echo -e " \tsuspend\t\t -- suspends accound(first param) and it's VM(second param)"
        echo -e " \tunsuspend\t -- unsuspends accound(first param) and it's VM(second param)"
        echo -e " \tdelete\t\t -- deletes user, requires it's ID as first param"
        echo -e " \t-h, help\t -- prints this help"
        echo -e "-sh, shutdown, poweroff -- shuts down the VM, requires it's ID as first param"
    ;;
esac
